"use client";

import { useState } from "react";
import { zodResolver } from "@hookform/resolvers/zod";
import { useForm } from "react-hook-form";
import * as z from "zod";
import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormDescription,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Loader2, FileText } from 'lucide-react';

// Schema validasi untuk form generator dokumen
const documentFormSchema = z.object({
  documentType: z.enum(["policy", "procedure", "form", "record", "report"], {
    required_error: "Pilih tipe dokumen.",
  }),
  title: z.string().min(5, {
    message: "Judul dokumen harus minimal 5 karakter.",
  }),
  description: z.string().min(10, {
    message: "Deskripsi dokumen harus minimal 10 karakter.",
  }),
  companyName: z.string().min(2, {
    message: "Nama perusahaan harus minimal 2 karakter.",
  }),
  industry: z.string().optional(),
  additionalInfo: z.string().optional(),
});

export function DocumentGenerator() {
  const [isGenerating, setIsGenerating] = useState(false);
  const [generatedDocumentUrl, setGeneratedDocumentUrl] = useState<string | null>(null);

  // Inisialisasi form dengan react-hook-form
  const form = useForm<z.infer<typeof documentFormSchema>>({
    resolver: zodResolver(documentFormSchema),
    defaultValues: {
      documentType: "policy",
      title: "",
      description: "",
      companyName: "",
      industry: "",
      additionalInfo: "",
    },
  });

  // Handler untuk submit form
  const onSubmit = async (values: z.infer<typeof documentFormSchema>) => {
    setIsGenerating(true);
    setGeneratedDocumentUrl(null);

    try {
      // Simulasi pembuatan dokumen
      await new Promise((resolve) => setTimeout(resolve, 3000));

      // Simulasi URL dokumen yang dihasilkan (dalam implementasi nyata, ini akan memanggil API)
      setGeneratedDocumentUrl("#");
    } catch (error) {
      console.error("Error generating document:", error);
    } finally {
      setIsGenerating(false);
    }
  };

  return (
    <Card className="w-full">
      <CardHeader>
        <CardTitle>Generator Dokumen SMAP</CardTitle>
        <CardDescription>
          Buat dokumen SMAP yang sesuai dengan kebutuhan organisasi Anda
        </CardDescription>
      </CardHeader>
      <CardContent>
        {generatedDocumentUrl ? (
          <div className="flex flex-col items-center justify-center space-y-4 p-6 border rounded-md bg-gray-50">
            <FileText className="h-16 w-16 text-primary" />
            <h3 className="text-xl font-semibold">Dokumen Berhasil Dibuat!</h3>
            <p className="text-center text-muted-foreground">
              Dokumen SMAP Anda telah berhasil dibuat dan siap untuk diunduh.
            </p>
            <div className="flex gap-4">
              <Button asChild>
                <a href={generatedDocumentUrl} download>
                  Unduh Dokumen
                </a>
              </Button>
              <Button
                variant="outline"
                onClick={() => {
                  setGeneratedDocumentUrl(null);
                  form.reset();
                }}
              >
                Buat Dokumen Baru
              </Button>
            </div>
          </div>
        ) : (
          <Form {...form}>
            <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-6">
              <FormField
                control={form.control}
                name="documentType"
                render={({ field }) => (
                  <FormItem>
                    <FormLabel>Tipe Dokumen</FormLabel>
                    <Select onValueChange={field.onChange} defaultValue={field.value}>
                      <FormControl>
                        <SelectTrigger>
                          <SelectValue placeholder="Pilih tipe dokumen" />
                        </SelectTrigger>
                      </FormControl>
                      <SelectContent>
                        <SelectItem value="policy">Kebijakan</SelectItem>
                        <SelectItem value="procedure">Prosedur</SelectItem>
                        <SelectItem value="form">Formulir</SelectItem>
                        <SelectItem value="record">Catatan</SelectItem>
                        <SelectItem value="report">Laporan</SelectItem>
                      </SelectContent>
                    </Select>
                    <FormDescription>
                      Pilih tipe dokumen yang ingin Anda buat.
                    </FormDescription>
                    <FormMessage />
                  </FormItem>
                )}
              />
              <FormField
                control={form.control}
                name="title"
                render={({ field }) => (
                  <FormItem>
                    <FormLabel>Judul Dokumen</FormLabel>
                    <FormControl>
                      <Input placeholder="Masukkan judul dokumen" {...field} />
                    </FormControl>
                    <FormDescription>
                      Judul dokumen yang akan dibuat.
                    </FormDescription>
                    <FormMessage />
                  </FormItem>
                )}
              />
              <FormField
                control={form.control}
                name="description"
                render={({ field }) => (
                  <FormItem>
                    <FormLabel>Deskripsi</FormLabel>
                    <FormControl>
                      <Textarea
                        placeholder="Jelaskan tujuan dan cakupan dokumen"
                        className="resize-none"
                        {...field}
                      />
                    </FormControl>
                    <FormDescription>
                      Deskripsi singkat tentang dokumen yang akan dibuat.
                    </FormDescription>
                    <FormMessage />
                  </FormItem>
                )}
              />
              <FormField
                control={form.control}
                name="companyName"
                render={({ field }) => (
                  <FormItem>
                    <FormLabel>Nama Perusahaan</FormLabel>
                    <FormControl>
                      <Input placeholder="Masukkan nama perusahaan" {...field} />
                    </FormControl>
                    <FormDescription>
                      Nama perusahaan atau organisasi Anda.
                    </FormDescription>
                    <FormMessage />
                  </FormItem>
                )}
              />
              <FormField
                control={form.control}
                name="industry"
                render={({ field }) => (
                  <FormItem>
                    <FormLabel>Industri</FormLabel>
                    <FormControl>
                      <Input placeholder="Masukkan industri perusahaan" {...field} />
                    </FormControl>
                    <FormDescription>
                      Industri tempat perusahaan Anda beroperasi (opsional).
                    </FormDescription>
                    <FormMessage />
                  </FormItem>
                )}
              />
              <FormField
                control={form.control}
                name="additionalInfo"
                render={({ field }) => (
                  <FormItem>
                    <FormLabel>Informasi Tambahan</FormLabel>
                    <FormControl>
                      <Textarea
                        placeholder="Informasi tambahan yang perlu disertakan dalam dokumen"
                        className="resize-none"
                        {...field}
                      />
                    </FormControl>
                    <FormDescription>
                      Informasi tambahan yang ingin Anda sertakan dalam dokumen (opsional).
                    </FormDescription>
                    <FormMessage />
                  </FormItem>
                )}
              />
              <Button type="submit" disabled={isGenerating} className="w-full">
                {isGenerating ? (
                  <>
                    <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                    Menghasilkan Dokumen...
                  </>
                ) : (
                  "Hasilkan Dokumen"
                )}
              </Button>
            </form>
          </Form>
        )}
      </CardContent>
    </Card>
  );
}